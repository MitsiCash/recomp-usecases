:- eval(searchApp()).

not(A) :-
        derive(A),
        !,
        fail().
not(_).

searchApp() :-
    rcvMult(XID,P,From,request,{operation->search,webID->WebID,query->Q,dwp->DWP}) [loggedIn(From,WebID,DWP), consent(WebID,personal,personalization)],
    searchHelper(WebID,Q,From,Result,yes),
    sendMsgSync(XID,P,From,inform,{msg->Result}).

searchApp() :-
    rcvMult(XID,P,From,request,{operation->search,webID->WebID,query->Q,dwp->DWP}) [loggedIn(From,WebID,DWP), not(alreadyAsked(WebID,personal,personalization))],
    Msg = "The searchApp wants your consent to access your personal data in order to deliver personalized results",
    sendMsg(XID,P,From,input_request, {operation->consent, data->personal, purpose->personalization, msg->Msg}),
    rcvMsg(XID,P,From,response,{answer->In}),
    assert(alreadyAsked(WebID,personal,personalization)),
    searchHelper(WebID,Q,From,Result,In),
    sendMsgSync(XID,P,From,inform,{msg->Result}).

searchApp() :-
    rcvMult(XID,P,From,request,{operation->search,webID->WebID,query->Q,dwp->DWP}) [loggedIn(From,WebID,DWP), alreadyAsked(WebID,personal,personalization), not(consent(WebID,personal,personalization))],
    searchHelper(WebID,Q,From,Result,no),
    sendMsgSync(XID,P,From,inform,{msg->Result}).

searchApp() :-
    rcvMult(XID,P,From,request,{operation->search,webID->WebID,query->Q}) [not(loggedIn(From,WebID,_))],
    searchHelper(WebID,Q,From,Result,no),
    sendMsgSync(XID,P,From,inform,{msg->Result}),
    Msg = "log in to receive personalized search results",
    sendMsgSync(XID,P,From,inform,{msg->Msg}).

searchApp() :-
    rcvMult(XID,P,From,request,{operation->login, idp->IDP}),
    println(["HERE"]),
    sendMsgSync(XID,P,IDP,request,{operation->login,agent->From}),
    rcvMult(XID,P,IDP,inform,{operation->loginReply,authToken->Token,agent->From,openID->OpenID}),
    assert(loggedIn(From,WebID,DWP)).


searchHelper(WebID,Q,From,Result,yes) :-
    not(consent(WebID,personal,personalization)),
    assert(consent(WebID,personal,personalization)),
    !,
    personalizedSearch(WebID,Q,From,Result).

searchHelper(WebID,Q,From,Result,yes) :-
    consent(WebID,personal,personalization),
    personalizedSearch(WebID,Q,From,Result).


searchHelper(WebID,Q,From,Result,no) :-
    nonPersonalizedSearch(Q,Result).

nonPersonalizedSearch("travel suggestions",Result) :-
    Result = "maybe less awesome places list".

personalizedSearch(WebID,"travel suggestions",From,Result) :-
    Result = "awesome places list".